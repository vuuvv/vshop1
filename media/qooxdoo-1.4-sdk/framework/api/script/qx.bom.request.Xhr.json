{"attributes": {"packageName": "qx.bom.request", "type": "bootstrap", "fullName": "qx.bom.request.Xhr", "name": "Xhr"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">EXPERIMENTAL</span> &#8211; <span class=\"caps\">NOT</span> <span class=\"caps\">READY</span> <span class=\"caps\">FOR</span> <span class=\"caps\">PRODUCTION</span></p>\n\n<p>A wrapper of the XMLHttpRequest host object (or equivalent).</p>\n\n<p>Hides browser inconsistencies and works around bugs found in popular\nimplementations. Follows the interface specified in\n<a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>. Also\nborrows some methods as described in\n<a href=\"http://www.w3.org/TR/XMLHttpRequest2/\">XmlHttpRequest2</a>.</p>\n\n<p>The most basic setup looks similar to this:</p>\n\n<pre class=\"javascript\">\n var req = new qx.bom.request.Xhr();\n req.onload = function() {\n   // Handle data received\n   req.responseText;\n }\n\n req.open(\"GET\", url);\n req.send();\n</pre>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"isCtor": true, "name": "ctor"}, "type": "method"}]}, {"type": "constants", "children": [{"attributes": {"type": "Number", "name": "HEADERS_RECEIVED", "value": "2"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "UNSENT", "value": "0"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "LOADING", "value": "3"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "DONE", "value": "4"}, "type": "constant"}, {"attributes": {"type": "Number", "name": "OPENED", "value": "1"}, "type": "constant"}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__initNativeXhr"}, "type": "method", "children": [{"attributes": {"text": "<p>Init native <span class=\"caps\">XHR</span>.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__normalizeResponseXML"}, "type": "method", "children": [{"attributes": {"text": "<p>Normalize responseXML property across browsers.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__normalizeStatus"}, "type": "method", "children": [{"attributes": {"text": "<p>Normalize status property across browsers.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__onNativeReadyStateChange"}, "type": "method", "children": [{"attributes": {"text": "<p>Handle native onreadystatechange.</p>\n\n<p>Calls user-defined function onreadystatechange on each\nstate change and syncs the <span class=\"caps\">XHR</span> status properties.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__onUnload"}, "type": "method", "children": [{"attributes": {"text": "<p>Handler for native unload event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__supportsManyRequests"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to determine whether browser supports reusing the\nsame native <span class=\"caps\">XHR</span> to send more requests.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_createNativeXhr"}, "type": "method", "children": [{"attributes": {"text": "<p>Create XMLHttpRequest (or equivalent).</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>XMLHttpRequest or equivalent.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getNativeXhr"}, "type": "method", "children": [{"attributes": {"text": "<p>Get wrapped native XMLHttpRequest (or equivalent).</p>\n\n<p>Can be XMLHttpRequest or ActiveX.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>XMLHttpRequest or equivalent.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getProtocol"}, "type": "method", "children": [{"attributes": {"text": "<p>Get protocol.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The current protocol.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "abort"}, "type": "method", "children": [{"attributes": {"text": "<p>Aborts the request.</p>\n\n<p>Cancels any network activity.</p>"}, "type": "desc"}]}, {"attributes": {"name": "dispose"}, "type": "method", "children": [{"attributes": {"text": "<p>Dispose object and wrapped native <span class=\"caps\">XHR</span>.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getAllResponseHeaders"}, "type": "method", "children": [{"attributes": {"text": "<p>Get all response headers from response.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>All response headers.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getResponseHeader"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "header"}, "type": "param", "children": [{"attributes": {"text": "<p>Key of the header to get the value from.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a single response header from response.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Response header.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "onerror"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;error&#8221; that is fired on a network error.</p>\n\n<p>Note: This handler is <span class=\"caps\">NOT</span> called on successful retrieval, even when\nthe <span class=\"caps\">HTTP</span> status code indicates an error.</p>\n\n<p>Replace with custom method to listen to the &#8220;error&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"name": "onload"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;load&#8221; that is fired on successful retrieval.</p>\n\n<p>Note: This handler is called even when the <span class=\"caps\">HTTP</span> status indicates an error.</p>\n\n<p>Replace with custom method to listen to the &#8220;load&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"name": "onloadend"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;loadend&#8221; that is fired on retrieval.</p>\n\n<p>Note: This handler is called even when a network error (or similar)\noccurred.</p>\n\n<p>Replace with custom method to listen to the &#8220;loadend&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"name": "onreadystatechange"}, "type": "method", "children": [{"attributes": {"text": "<p>Event handler for an event that fires at every state change.</p>\n\n<p>Replace with custom method to get informed about the communication progress.</p>"}, "type": "desc"}]}, {"attributes": {"name": "open"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">HTTP</span> method to use, either &#8220;GET&#8221; or &#8220;POST&#8221;.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URL</span> to which to send the request.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "async"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether or not to perform the operation asynchronously.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "user"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional user name to use for authentication purposes.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "password"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional password to use for authentication purposes.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Initializes (prepares) the request.</p>"}, "type": "desc"}]}, {"attributes": {"name": "send"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional data to send.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sends the request.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setRequestHeader"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "header"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the header whose value is to be set.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to set as the body of the header.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets an <span class=\"caps\">HTTP</span> request header to be used by the request.</p>\n\n<p>Note: The request must be initialized before using this method.</p>"}, "type": "desc"}]}]}]}