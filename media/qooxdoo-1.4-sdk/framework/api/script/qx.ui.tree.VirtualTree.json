{"attributes": {"name": "VirtualTree", "interfaces": "qx.ui.tree.core.IVirtualTree", "mixins": "qx.ui.tree.selection.MSelectionHandling", "superClass": "qx.ui.virtual.core.Scroller", "fullName": "qx.ui.tree.VirtualTree", "type": "class", "packageName": "qx.ui.tree"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<p>Virtual tree implementation.</p>\n\n<p>The virtual tree can be used to render node and leafs. Nodes and leafs are\nboth items for a tree. The difference between a node and a leaf is that a\nnode has child items, but a leaf not.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.virtual.core.Scroller", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model structure for the tree, for\n  more details have a look at the &#8216;model&#8217; property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "labelPath"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the label property, for more\n  details have a look at the &#8216;labelPath&#8217; property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "childProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the child property, for\n  more details have a look at the &#8216;childProperty&#8217; property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__getParent"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>Node or leaf to get parent.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to get the parent node. Node! This only works with leaf and\nnodes which are in the internal lookup table.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The parent note or <code>null</code> when\n  no parent found.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__getVisibleChildrenFrom"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>The start node to start search.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "nestedLevel"}, "type": "param", "children": [{"attributes": {"text": "<p>The nested level from the start node.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to get all visible children form the passed parent node.\nThe algorithm implements a depth-first search with a complexity:\n<code>O(n)</code> and <code>n</code> are all visible items.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>All visible children form the parent.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__openNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to set to open nodes.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to set the node to the open nodes data structure when it\nis not included.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__openNodeAndAllParents"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "startNode"}, "type": "param", "children": [{"attributes": {"text": "<p>Start (root) node to search.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetNode"}, "type": "param", "children": [{"attributes": {"text": "<p>Target node to open (and his parents).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method to set the target node and all his parents to the open\nnodes data structure. The algorithm implements a depth-first search with\na complexity: <code>O(n)</code> and <code>n</code> are all model items.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>True</code> when the targetNode and his\n parents could opened, <code>false</code> otherwise."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__updateRowCount"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to update the row count.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__updateSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to remove items form the selection which are not in the\nlookup table.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyChildProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#childProperty"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyDelegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#delegate"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyHideRoot"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#hideRoot"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyIconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#iconOptions"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyIconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#iconPath"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyLabelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#labelOptions"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyLabelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#labelPath"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyModel"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#model"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyOpenMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#openMode"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyRowHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#itemHeight"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyShowLeafs"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"type": "apply", "children": [{"attributes": {"name": "qx.ui.tree.VirtualTree#showLeafs"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_init"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the virtual tree.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_initLayer"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the virtual tree layer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onChangeBubble"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The data event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the changeBubble event. The handler rebuild the lookup\ntable when the child structure changed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onKeyPress"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>key event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for key press events. Open and close the current selected\nitem on key left and right press. Jump to parent on key left if already\nclosed.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onOpen"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell click event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.virtual.core.CellEvent"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler to open/close clicked nodes.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onUpdated"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the update event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "buildLookupTable"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to build the internal data structure.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "closeNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"name": "getChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>childProperty</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>hideRoot</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "getLevel"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "getLookupTable"}, "type": "method"}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>openMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "name": "getOpenNodes"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all open nodes.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>All open nodes.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>showLeafs</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "hasChildren"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "name": "initChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>childProperty</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>childProperty</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>delegate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>hideRoot</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>hideRoot</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>itemHeight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>openMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>openMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>showLeafs</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>showLeafs</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>hideRoot</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "isNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "item"}, "type": "param"}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "isNodeOpen"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"name": "isShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>showLeafs</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.tree.core.IVirtualTree", "name": "openNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}]}]}, {"attributes": {"name": "openNodeAndParents"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to open.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Opens the passed node and all his parents. <strong>Note!</strong> The algorithm\nimplements a depth-first search with a complexity: <code>O(n)</code> and\n<code>n</code> are all model items.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>childProperty</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>delegate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>hideRoot</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>itemHeight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>openMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>showLeafs</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setChildProperty", "fromProperty": "childProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>childProperty</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>childProperty</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childProperty}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>hideRoot</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpenMode", "fromProperty": "openMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>openMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>openMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #openMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>showLeafs</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "syncWidget"}, "type": "method"}, {"attributes": {"name": "toggleHideRoot", "fromProperty": "hideRoot"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>hideRoot</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideRoot}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleShowLeafs", "fromProperty": "showLeafs"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>showLeafs</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showLeafs}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"virtual-tree\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea"}, "type": "property"}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "childProperty", "apply": "_applyChildProperty"}, "type": "property", "children": [{"attributes": {"text": "<p>The name of the property, where the children are stored in the model.\nInstead of the {@link #labelPath} must the child property a direct\nproperty form the model instance.</p>"}, "type": "desc"}]}, {"attributes": {"name": "delegate", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyDelegate", "event": "changeDelegate"}, "type": "property", "children": [{"attributes": {"text": "<p>Delegation object, which can have one or more functions defined by the\n{@link qx.ui.tree.core.IVirtualTreeDelegate} interface.</p>"}, "type": "desc"}]}, {"attributes": {"name": "focusable", "docFrom": "qx.ui.core.Widget", "defaultValue": "true", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"name": "height", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "200", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}, {"attributes": {"apply": "_applyHideRoot", "defaultValue": "false", "propertyType": "new", "check": "Boolean", "name": "hideRoot"}, "type": "property", "children": [{"attributes": {"text": "<p>Hides <strong>only</strong> the root node, not the node&#8217;s children when the property is\nset to <code>true</code>.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "name": "iconOptions", "apply": "_applyIconOptions"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "iconPath", "apply": "_applyIconPath"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\nshown as an icon.</p>"}, "type": "desc"}]}, {"attributes": {"name": "itemHeight", "defaultValue": "25", "propertyType": "new", "apply": "_applyRowHeight", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Default item height.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "name": "labelOptions", "apply": "_applyLabelOptions"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "labelPath", "apply": "_applyLabelPath"}, "type": "property", "children": [{"attributes": {"text": "<p>The name of the property, where the value for the tree folders label\nis stored in the model classes.</p>"}, "type": "desc"}]}, {"attributes": {"name": "model", "check": "qx.core.Object", "allowNull": "true", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>The model containing the data (nodes and/or leafs) which should be shown\nin the tree.</p>"}, "type": "desc"}]}, {"attributes": {"name": "openMode", "defaultValue": "\"dblclick\"", "propertyType": "new", "possibleValues": "\"click\",\"dblclick\",\"none\"", "apply": "_applyOpenMode", "event": "changeOpenMode", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Control whether clicks or double clicks should open or close the clicked\nitem.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyShowLeafs", "defaultValue": "true", "propertyType": "new", "check": "Boolean", "name": "showLeafs"}, "type": "property", "children": [{"attributes": {"text": "<p>Configures the tree to show also the leafs. When the property is set to\n<code>false</code> <strong>only</strong> the nodes are shown.</p>"}, "type": "desc"}]}, {"attributes": {"name": "width", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "100", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}]}, {"type": "events", "children": [{"attributes": {"name": "changeDelegate"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #delegate}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpenMode"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #openMode}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}